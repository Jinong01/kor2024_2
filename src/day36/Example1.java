package day36;

import java.util.ArrayList;

public class Example1 {

    int 멤버변수 = 40;
    static int 전역변수 = 20;

    public static void main(String[] args) {

        if(10>3){ // if 라는 지역
            int 지역변수 = 10;
        }

        // System.out.println(지역변수); 지역변수는 지역 밖 호출 불가능
        System.out.println(전역변수);
        임의함수(3); // 3 : 인자값, 인수값을 호출하는 함수내 매개변수에게 대입
        // System.out.println(멤버변수); 오류발생
        // 매개변수는 객체가 생성이 될 때 호출 가능
        Example1 객체 = new Example1();
        System.out.println(객체.멤버변수);

        Example1 변수 = new Example1(); // 변수가 가지고 있는 자료는 몇개일까요? 1개. 변수가 가지고있는 자료는 객체 1개.
                                        // 객체가 여러 자료를 가지고 있다.


        /* [1] 변수 : 상징적인 이름
            변수 : 하나의 데이터를 저장할 수 있는 메모리 공간 (논리적인 공간)
            변수명 : 메모리 공간의 상징적인 이름
            변수종류
                지역변수 : 특정한 {} 안에서 선언된 변수, {} - 함수,if,for
                    -> 선언된 {} 밖으로 호출이 불가능
                전역변수 : static 으로 선언된 변수
                    -> 프로젝트 내 모든 클래스에서 호출이 가능
                매개변수 : 함수 호출시 인자값을 함수에 대입하는 변수
                    -> 중매(매) : 매개변수 , 인자값 <--> 함수내 변수
                    -> 함수내에서만 사용 가능한 변수, 인수
                멤버변수 : 클래스안에 존재하고 함수밖에 존재하는 변수
                    -> 멤버(객체의 멤버)
                    -> 객체가 생성될 때 같이 생성되는 변수 , 객체를 통해 접근가능한 변수
                    -> 2가지 :
                        1.다른 클래스 사용시에서 지정한 멤버변수를 호출시
                            클래스 변수 = new 클래스()
                            변수.멤버변수;
                        2. 같은 클래스내 멤버변수 호출시
                            this.멤버변수; (상속클래스에서는 super)
                주의할점 : 변수는 참조라는걸 이용해서 하나의 값을 기차처럼 연결/참조하는 구조
                    -> 메모리 효율성 극대화 하기
                    Example1 변수 = new Example1();
                        1. 변수는 하나의 객체를 참조한다.
                        2. 객체는 각 멤버변수들을 참조한다.
                        3. 각 멤버변수들은 각 값/객체를 참조한다.
                    변수 ---> Example1 객체 ---> 멤버변수 ---> 40
             기본타입 참조타입
             스택메모리 : 지역변수
             힙 메모리 : 참조주소
             배열과 객체의 차이 : 값을 호출할때 배열은 순서(index) , 객체는 멤버변수명
             [2] 배열(문법) : 순서대로 번호가 붙은 원소들이 연속적인 형태로 구성된 구조 *고정길이
                    - 나열 : 차례대로 죽 벌여 늘어놓다.
                    - 인덱스 : 순서대로 붙인 번호 , 0부터 시작
             [3] 컬렉션프레임워크 : 객체기반의 여러 자료들을 저장하는 방법/함수 지원하는 클래스/인터페이스 들
                - LIST
                    ArrayList(클래스) *가변길이
                - SET
                - MAP
         */
        int 변수1 = 10;
        int[] 변수2 = new int[3]; // 변수2는 몇개의 자료를 가지고 있나요? 1개. 3개의 변수를 참조하고 있는 배열 1개를 가지고 있다.
        변수2[0] = 10;
        변수2[1] = 20;
        변수2[2] = 30;

        ArrayList<Integer> 변수3 = new ArrayList<>();
        변수3.add(10);
        변수3.add(20);
        변수3.add(30);

    }
    public static void 임의함수 (int 매개변수){}
}
